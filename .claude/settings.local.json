{
  "permissions": {
    "allow": [
      "Bash(curl -s \"http://localhost:5000/api/items?limit=2\")",
      "Bash(curl -s \"http://localhost:5000/api/items?coating_status=no_coating&limit=2\")",
      "Bash(npm run type-check)",
      "Bash(curl -s \"http://localhost:5000/api/items?limit=3\")",
      "Bash(python -m json.tool)",
      "Bash(netstat -ano)",
      "Bash(findstr :5000)",
      "Bash(findstr LISTENING)",
      "Bash(dir \"C:\\Users\\USER\\claude_code\\FITaeYoungERP\\tests\\integration\" /b)",
      "Bash(npx supabase-mcp execute-sql --project-id pybjnkbmtlyaftuiieyq --query \"SELECT column_name, data_type, column_default, is_nullable FROM information_schema.columns WHERE table_name = ''items'' AND column_name = ''coating_status'';\")",
      "Bash(psql $NEXT_PUBLIC_SUPABASE_URL -c \"\\d items\")",
      "Bash(node scripts/validate-coating-status.js)",
      "Bash(node scripts/validate-coating-status-full.js)",
      "Bash(node scripts/validate-coating-status-correct.js)",
      "Bash(npm run dev:safe)",
      "Bash(curl -s \"http://localhost:5000/api/items?coating_status=before_coating&limit=2\")",
      "Bash(curl -s \"http://localhost:5000/api/items?coating_status=after_coating&limit=2\")",
      "Bash(curl -s \"http://localhost:5000/api/items?limit=5\")",
      "Bash(curl -s \"http://localhost:5000/master/items\")",
      "Bash(curl -s \"http://localhost:5000/api/dashboard/overview\")",
      "Bash(curl -s \"http://localhost:5000/api/items?coating_status=before_coating&limit=5\")",
      "Bash(curl -s \"http://localhost:5000/api/items?coating_status=after_coating&limit=5\")",
      "Bash(curl -s \"http://localhost:5000/api/companies?limit=25\")",
      "Bash(curl -s \"http://localhost:5000/api/companies?limit=100\")",
      "Bash(curl -s \"http://localhost:5000/api/companies?company_type=공급사&limit=5\")",
      "Bash(curl -s \"http://localhost:5000/api/companies?type=공급사&limit=5\")",
      "Bash(curl -s \"http://localhost:5000/api/bom?limit=5\")",
      "Bash(curl -s \"http://localhost:5000/api/sales-transactions?limit=2\")",
      "Bash(curl -s \"http://localhost:5000/api/purchases?limit=2\")",
      "Bash(curl -s \"http://localhost:5000/api/collections?limit=2\")",
      "Bash(dir \"C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\app\" /b /s)",
      "Bash(findstr /i \"monthly-prices\\|inbound\\|sales\")",
      "Bash(git init)",
      "Bash(git branch -M main)",
      "Bash(git remote add origin https://github.com/kkhwan1/TaeYaoung_ERP_251020.git)",
      "Bash(git add .)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(mkdir:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//c/Users/USER/.claude/**)",
      "Read(//c/Users/USER/.claude-code-templates/**)",
      "Bash(find:*)",
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "Bash(powershell -Command \"Get-ChildItem -Path src -Directory | Select-Object Name\")",
      "Bash(powershell -Command:*)",
      "Bash(ls:*)",
      "Bash(npx tsc:*)",
      "Bash(Select-String -Pattern \"(error TS|Found \\d+ error)\" -Context 0,2)",
      "Bash(tree:*)",
      "Bash(for comp in \"ContractForm\" \"AdvancedSearch\" \"SearchPresets\" \"NotificationPanel\" \"NotificationSettingsModal\" \"BalanceSheetTable\" \"CashFlowTable\" \"FinancialCharts\" \"BOMViewer\" \"CoilSpecsForm\" \"CostAnalysisPanel\" \"ErrorDashboard\" \"ToastDemo\")",
      "Bash(do echo \"=== $comp ===\")",
      "Bash(done)",
      "Bash(curl:*)",
      "Bash(node:*)",
      "Bash(claude config list:*)",
      "Bash(Select-String -Pattern \"(ReceivingForm|error TS)\" -Context 0,2)",
      "Bash(npm run restart:*)",
      "Bash(timeout 15 bash:*)",
      "Bash(cat:*)",
      "Bash(npm run test:*)",
      "Bash(npx playwright test --list)",
      "Bash(npm run db:check-schema:*)",
      "Bash(tee:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(timeout 20 bash:*)",
      "Bash(set)",
      "Bash(timeout 30 bash:*)",
      "Bash(timeout 60 npm run test:*)",
      "Bash(npm run db:check-data:*)",
      "Bash(python:*)",
      "Bash(tasklist:*)",
      "Bash(awk:*)",
      "Bash(git remote set-url:*)",
      "Bash(git push:*)",
      "Bash(npx vercel --version)",
      "Bash(npx vercel:*)"
    ],
    "deny": [],
    "ask": []
  }
}
