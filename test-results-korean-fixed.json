{"numFailedTestSuites":1,"numFailedTests":15,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":15,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761781140024,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Korean Character Encoding Tests","API Request Body Encoding"],"duration":64,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:60:34)"],"fullName":"Korean Character Encoding Tests API Request Body Encoding should preserve Korean in POST company name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142565,"status":"failed","title":"should preserve Korean in POST company name"},{"ancestorTitles":["Korean Character Encoding Tests","API Request Body Encoding"],"duration":9,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:83:38)"],"fullName":"Korean Character Encoding Tests API Request Body Encoding should preserve Korean in PATCH company_category","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142641,"status":"failed","title":"should preserve Korean in PATCH company_category"},{"ancestorTitles":["Korean Character Encoding Tests","API Request Body Encoding"],"duration":7,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:118:38)"],"fullName":"Korean Character Encoding Tests API Request Body Encoding should preserve Korean in business_info JSONB field","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142651,"status":"failed","title":"should preserve Korean in business_info JSONB field"},{"ancestorTitles":["Korean Character Encoding Tests","API Request Body Encoding"],"duration":8,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:160:38)"],"fullName":"Korean Character Encoding Tests API Request Body Encoding should handle multiple Korean sentences in business_info","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142659,"status":"failed","title":"should handle multiple Korean sentences in business_info"},{"ancestorTitles":["Korean Character Encoding Tests","URL Query Parameter Encoding"],"duration":5,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:205:36)"],"fullName":"Korean Character Encoding Tests URL Query Parameter Encoding should handle Korean category in monthly-summary query","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142669,"status":"failed","title":"should handle Korean category in monthly-summary query"},{"ancestorTitles":["Korean Character Encoding Tests","URL Query Parameter Encoding"],"duration":5,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:222:24)"],"fullName":"Korean Character Encoding Tests URL Query Parameter Encoding should handle Korean category in export query","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142675,"status":"failed","title":"should handle Korean category in export query"},{"ancestorTitles":["Korean Character Encoding Tests","URL Query Parameter Encoding"],"duration":6,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:231:34)"],"fullName":"Korean Character Encoding Tests URL Query Parameter Encoding should handle special characters in Korean text","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142680,"status":"failed","title":"should handle special characters in Korean text"},{"ancestorTitles":["Korean Character Encoding Tests","Database Round-Trip Encoding"],"duration":7,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:260:38)"],"fullName":"Korean Character Encoding Tests Database Round-Trip Encoding should preserve Korean through full CRUD cycle","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142687,"status":"failed","title":"should preserve Korean through full CRUD cycle"},{"ancestorTitles":["Korean Character Encoding Tests","Database Round-Trip Encoding"],"duration":6,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:317:38)"],"fullName":"Korean Character Encoding Tests Database Round-Trip Encoding should preserve Korean in JSONB nested structures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142695,"status":"failed","title":"should preserve Korean in JSONB nested structures"},{"ancestorTitles":["Korean Character Encoding Tests","Edge Cases"],"duration":6,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:353:32)"],"fullName":"Korean Character Encoding Tests Edge Cases should handle empty Korean strings","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142702,"status":"failed","title":"should handle empty Korean strings"},{"ancestorTitles":["Korean Character Encoding Tests","Edge Cases"],"duration":6,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:376:32)"],"fullName":"Korean Character Encoding Tests Edge Cases should handle Korean text with mixed English","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142709,"status":"failed","title":"should handle Korean text with mixed English"},{"ancestorTitles":["Korean Character Encoding Tests","Edge Cases"],"duration":5,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:403:32)"],"fullName":"Korean Character Encoding Tests Edge Cases should handle Korean text with numbers and symbols","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142716,"status":"failed","title":"should handle Korean text with numbers and symbols"},{"ancestorTitles":["Korean Character Encoding Tests","Edge Cases"],"duration":5,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:429:32)"],"fullName":"Korean Character Encoding Tests Edge Cases should handle maximum length Korean text","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142721,"status":"failed","title":"should handle maximum length Korean text"},{"ancestorTitles":["Korean Character Encoding Tests","Content-Type Header Validation"],"duration":4,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:457:34)"],"fullName":"Korean Character Encoding Tests Content-Type Header Validation should work with charset=utf-8 in Content-Type","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142727,"status":"failed","title":"should work with charset=utf-8 in Content-Type"},{"ancestorTitles":["Korean Character Encoding Tests","Content-Type Header Validation"],"duration":3,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at apiRequest (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:24:20)\n    at Object.<anonymous> (C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts:481:34)"],"fullName":"Korean Character Encoding Tests Content-Type Header Validation should work without explicit charset (defaults to UTF-8)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761781142732,"status":"failed","title":"should work without explicit charset (defaults to UTF-8)"}],"endTime":1761781142818,"message":"  ● Korean Character Encoding Tests › API Request Body Encoding › should preserve Korean in POST company name\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:60:34)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › API Request Body Encoding › should preserve Korean in PATCH company_category\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:83:38)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › API Request Body Encoding › should preserve Korean in business_info JSONB field\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:118:38)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › API Request Body Encoding › should handle multiple Korean sentences in business_info\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:160:38)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › URL Query Parameter Encoding › should handle Korean category in monthly-summary query\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:205:36)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › URL Query Parameter Encoding › should handle Korean category in export query\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 220 |\u001b[39m       \u001b[36mconst\u001b[39m category \u001b[33m=\u001b[39m \u001b[32m'소모품업체'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 221 |\u001b[39m       \u001b[36mconst\u001b[39m encoded \u001b[33m=\u001b[39m encodeURIComponent(category)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 222 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}/api/accounting/export?month=2025-01&category=${encoded}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 223 |\u001b[39m\n     \u001b[90m 224 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 225 |\u001b[39m       expect(response\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'content-disposition'\u001b[39m))\u001b[33m.\u001b[39mtoContain(category)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:222:24)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › URL Query Parameter Encoding › should handle special characters in Korean text\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:231:34)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Database Round-Trip Encoding › should preserve Korean through full CRUD cycle\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:260:38)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Database Round-Trip Encoding › should preserve Korean in JSONB nested structures\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:317:38)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Edge Cases › should handle empty Korean strings\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:353:32)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Edge Cases › should handle Korean text with mixed English\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:376:32)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Edge Cases › should handle Korean text with numbers and symbols\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:403:32)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Edge Cases › should handle maximum length Korean text\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:429:32)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Content-Type Header Validation › should work with charset=utf-8 in Content-Type\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:457:34)\n\n    Cause:\n    AggregateError:\n\n\n  ● Korean Character Encoding Tests › Content-Type Header Validation › should work without explicit charset (defaults to UTF-8)\n\n    TypeError: fetch failed\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m \u001b[90m// Helper function to make API requests\u001b[39m\n     \u001b[90m 23 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m apiRequest(endpoint\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m options\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mRequestInit\u001b[39m) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m`${API_BASE_URL}${endpoint}`\u001b[39m\u001b[33m,\u001b[39m {\n     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     \u001b[33m...\u001b[39moptions\u001b[33m,\u001b[39m\n     \u001b[90m 26 |\u001b[39m     headers\u001b[33m:\u001b[39m {\n     \u001b[90m 27 |\u001b[39m       \u001b[32m'Content-Type'\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'application/json; charset=utf-8'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at apiRequest (src/__tests__/lib/korean-encoding.test.ts:24:20)\n      at Object.<anonymous> (src/__tests__/lib/korean-encoding.test.ts:481:34)\n\n    Cause:\n    AggregateError:\n\n","name":"C:\\Users\\USER\\claude_code\\FITaeYoungERP\\src\\__tests__\\lib\\korean-encoding.test.ts","startTime":1761781140183,"status":"failed","summary":""}],"wasInterrupted":false}
